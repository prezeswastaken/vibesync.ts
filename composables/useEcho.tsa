// composables/useEcho.ts

import Echo from "laravel-echo";
import Pusher from "pusher-js";
import { useUserStore } from "~/store/userStore";

export const useEcho = () => {
	const config = useRuntimeConfig(); // Access runtime config
	const userStore = useUserStore(); // Access user store

	// Lazy initialize the Echo instance
	const ws = ref<Echo | null>(null);

	// A function to initialize the Echo instance
	const initEcho = () => {
		if (!ws.value) {
			window.Pusher = Pusher;
			console.log("INIT ECHO");

			ws.value = new Echo({
				authEndpoint: `${config.public.laravelApiUrl}/broadcasting/auth`,
				broadcaster: "reverb",
				auth: {
					headers: {
						Authorization: `Bearer ${userStore.accessToken}`, // If using token-based auth
						Accept: "application/json",
					},
				},
				key: "zkuzvsbp9hryzk5hpzrh",
				wsHost: "0.0.0.0",
				wsPort: 8080,
				wssPort: 443,
				forceTLS: false,
				enabledTransports: ["ws", "wss"],
			});

			window.Echo = ws.value; // Make Echo available globally if needed
		}
	};

	// Automatically initialize Echo on first use
	onMounted(() => {
		if (!ws.value) {
			initEcho();
		}
	});

	// Return the ws instance for use throughout the app
	return {
		ws,
		initEcho, // Optionally provide this to manually initialize
	};
};
